this_month = month(today)
this_month - 1
month(today-30)
today-30
last_month = ifelse(this_month==1, 12, this_month-1)
last_month
this_month = 2
last_month = ifelse(this_month==1, 12, this_month-1)
last_month
this_month = 12
last_month = ifelse(this_month==1, 12, this_month-1)
last_month
today = head(ds$date,1)
this_month = month(today)
last_month = ifelse(this_month==1, 12, this_month-1)
?dataTable
???dataTable
knitr::kable(tidy_ds[tidy_ds$month==this_month, format = "html")
knitr::kable(tidy_ds[tidy_ds$month==this_month], format = "html")
this_month
tidy_ds[tidy_ds$month==this_month]
tidy_ds[tidy_ds$month==this_month]
tidy_ds[tidy_ds$month==this_month,]
tidy_ds[tidy_ds$month==this_month,]
head(tidy_ds)
tidy_ds[tidy_ds$month==1, ]
tidy_ds[tidy_ds$month==-1, ]
tidy_ds[tidy_ds$month==01, ]
class(tids_ds$month)
class(tidy_ds$month)
month(today)
today
>month
?month
this_month = month(today, abbr=FALSE)
this_month
strptime
?strptime
?strptime
strftime("%m", today)
today = head(ds$date,1)
today
strftime("%m", today)
class(today)
today = as.Date(head(ds$date,1) )
this_month = strftime("%m", today)
today
class(today)
str(today)
today = as.Date(head(ds$date,1), format='%Y-%m-%d')
today
this_month = strftime("%m", today)
today = as.Date(head(ds$date,1), format='%Y-%m-%d')
today
strftime("%m", today)
today = head(ds$date,1, format='%Y-%m-%d')
today
this_month = strftime("%m", today)
today = as.Date(head(ds$date,1, format='%Y-%m-%d'))
this_month = strftime("%m", today)
as.Date.character
function (x, format = "", ...)
{
charToDate <- function(x) {
xx <- x[1L]
if (is.na(xx)) {
j <- 1L
while (is.na(xx) && (j <- j + 1L) <= length(x)) xx <- x[j]
if (is.na(xx))
f <- "%Y-%m-%d"
}
if (is.na(xx) || !is.na(strptime(xx, f <- "%Y-%m-%d",
tz = "GMT")) || !is.na(strptime(xx, f <- "%Y/%m/%d",
tz = "GMT")))
return(strptime(x, f))
stop("character string is not in a standard unambiguous format")
}
res <- if (missing(format))
charToDate(x)
else strptime(x, format, tz = "GMT")
as.Date(res)
}
install.packages('anytime')
?strftime
?strptime
strptime("%m", today)
today = as.Date(head(ds$date,1, format='%Y-%m-%d'))
this_month = strptime("%m", today)
require(anytime)
anydate(head(ds$date,1, format='%Y-%m-%d'))
this_month = strptime("%m", today)
?anydate
today = anydate(head(ds$date,1, format='%Y-%m-%d'))
this_month = month(today)
this_month
today = anydate(head(ds$date,1, format='%Y-%m-%d'))
this_month = month(today)
this_month
tidy_ds$month
as.numeric(tidy_ds$month)
today = anydate(head(ds$date,1, format='%Y-%m-%d'))
this_month = month(today)
last_month = ifelse(this_month==1, 12, this_month-1)
ds_this_month = tidy_ds[tidy_ds$month==this_month,]
knitr::kable(tidy_ds[as.numeric(tidy_ds$month)==this_month], format = "html")
tidy_ds[as.numeric(tidy_ds$month)==this_month, ]
tidy_ds_this_month = tidy_ds[as.numeric(tidy_ds$month)==this_month, ]
tidy_ds_this_month
this_year = year(today)
this_year
today
today - 30
today %m+% months(1)
today
today %m+% months(1)
today %m-% months(1)
last_month = month(today %m-% months(1))
last_month
today = anydate(head(ds$date,1, format='%Y-%m-%d'))
current_month = month(today)
last_month = month(today %m-% months(1))
current_year = year(today)
last_month_year = year(today %m-% months(1))
current_month = month(today)
last_month = month(today %m-% months(1))
current_year = year(today)
last_month_year = year(today %m-% months(1))
last_month_year
head(tidy_ds)
ds$amount = ifelse(ds$shared=='yes', ds$amount/2, ds$amount)
ds$amount2 = ifelse(ds$shared=='yes', ds$amount/2, ds$amount)
tidy_ds = sqldf('SELECT strftime("%m", date) AS month,
strftime("%Y", date) AS year,
SUM(amount) AS amount, cat, type, shared FROM ds
GROUP BY year, month, cat, type, shared ORDER BY year, month, cat, type, shared')
current_month = month(today)
last_month = month(today %m-% months(1))
current_year = year(today)
last_month_year = year(today %m-% months(1))
ds$amount2 = ifelse(ds$shared=='yes', ds$amount/2, ds$amount)
setwd('~/Dropbox/personal/financial/R')
source('src.R')
ds = read.csv('transactions/transactions-7Jan2017.csv')
ds$Original.Description = ds$Labels = ds$Notes= NULL
colnames(ds) = c('date', 'description', 'amount', 'type', 'cat', 'account')
ds$date = as.Date(ds$date, format='%m/%d/%Y')
ds$date = format(ds$date)
head(ds)
exclude = c('Loan Insurance', 'Loan Payment', 'Investments',
'Hide from Budgets & Trends', 'Credit Card Payment', 'Transfer',
'Loan Interest', 'Deposit', 'Loans')
ds = ds[!(ds$cat %in% exclude), ]
ds$shared = ifelse(ds$account=='Capital One Costco Card', 'yes', 'no')
ds$amount2 = ifelse(ds$shared=='yes', ds$amount/2, ds$amount)
tidy_ds = sqldf('SELECT strftime("%m", date) AS month,
strftime("%Y", date) AS year,
SUM(amount) AS amount, cat, type, shared FROM ds
GROUP BY year, month, cat, type, shared ORDER BY year, month, cat, type, shared')
head(tidy_ds)
head(ds)
tidy_ds = sqldf('SELECT strftime("%m", date) AS month,
strftime("%Y", date) AS year,
SUM(amount) AS amount, amount2, cat, type, shared FROM ds
GROUP BY year, month, cat, type, shared ORDER BY year, month, cat, type, shared')
head(tidy_ds)
setwd('~/Dropbox/personal/financial/R')
source('src.R')
ds = read.csv('transactions/transactions-7Jan2017.csv')
ds$Original.Description = ds$Labels = ds$Notes= NULL
colnames(ds) = c('date', 'description', 'amount', 'type', 'cat', 'account')
ds$date = as.Date(ds$date, format='%m/%d/%Y')
ds$date = format(ds$date)
head(ds)
exclude = c('Loan Insurance', 'Loan Payment', 'Investments',
'Hide from Budgets & Trends', 'Credit Card Payment', 'Transfer',
'Loan Interest', 'Deposit', 'Loans')
ds = ds[!(ds$cat %in% exclude), ]
ds$shared = ifelse(ds$account=='Capital One Costco Card', 'yes', 'no')
ds$amount2 = ifelse(ds$shared=='yes', ds$amount/2, ds$amount)
tidy_ds = sqldf('SELECT strftime("%m", date) AS month,
strftime("%Y", date) AS year,
SUM(amount) AS amount, amount2, cat, type, shared FROM ds
GROUP BY year, month, cat, type, shared ORDER BY year, month, cat, type, shared')
head(tidy_ds)
175/2
setwd('~/Dropbox/personal/financial/R')
source('src.R')
ds = read.csv('transactions/transactions-7Jan2017.csv')
ds$Original.Description = ds$Labels = ds$Notes= NULL
colnames(ds) = c('date', 'description', 'amount', 'type', 'cat', 'account')
ds$date = as.Date(ds$date, format='%m/%d/%Y')
ds$date = format(ds$date)
head(ds)
exclude = c('Loan Insurance', 'Loan Payment', 'Investments',
'Hide from Budgets & Trends', 'Credit Card Payment', 'Transfer',
'Loan Interest', 'Deposit', 'Loans')
ds = ds[!(ds$cat %in% exclude), ]
ds$shared = ifelse(ds$account=='Capital One Costco Card', 'yes', 'no')
ds$amount2 = ifelse(ds$shared=='yes', ds$amount/2, ds$amount)
head(ds2)
head(ds)
tidy_ds = sqldf('SELECT strftime("%m", date) AS month,
strftime("%Y", date) AS year,
SUM(amount) AS amount, amount2, cat, type FROM ds
GROUP BY year, month, cat, type ORDER BY year, month, cat, type')
head(tidy_ds)
tail(tidy_ds)
setwd('~/Dropbox/personal/financial/R')
source('src.R')
ds = read.csv('transactions/transactions-7Jan2017.csv')
ds$Original.Description = ds$Labels = ds$Notes= NULL
colnames(ds) = c('date', 'description', 'amount', 'type', 'cat', 'account')
ds$date = as.Date(ds$date, format='%m/%d/%Y')
ds$date = format(ds$date)
head(ds)
exclude = c('Loan Insurance', 'Loan Payment', 'Investments',
'Hide from Budgets & Trends', 'Credit Card Payment', 'Transfer',
'Loan Interest', 'Deposit', 'Loans')
ds = ds[!(ds$cat %in% exclude), ]
ds$shared = ifelse(ds$account=='Capital One Costco Card', 'yes', 'no')
tail9ds)
tail(ds)
ds$amount2 = ifelse(ds$shared=='yes', ds$amount/2, ds$amount)
tail(ds)
cbind(ds$amount, ds$amount2, ds$shared)
setwd('~/Dropbox/personal/financial/R')
source('src.R')
ds = read.csv('transactions/transactions-7Jan2017.csv')
ds$Original.Description = ds$Labels = ds$Notes= NULL
colnames(ds) = c('date', 'description', 'amount', 'type', 'cat', 'account')
ds$date = as.Date(ds$date, format='%m/%d/%Y')
ds$date = format(ds$date)
head(ds)
exclude = c('Loan Insurance', 'Loan Payment', 'Investments',
'Hide from Budgets & Trends', 'Credit Card Payment', 'Transfer',
'Loan Interest', 'Deposit', 'Loans')
ds = ds[!(ds$cat %in% exclude), ]
ds$shared = ifelse(ds$account=='Capital One Costco Card', 'yes', 'no')
ds$amount2 = ifelse(ds$shared=='yes', ds$amount/2, ds$amount)
tidy_ds = sqldf('SELECT strftime("%m", date) AS month,
strftime("%Y", date) AS year,
SUM(amount) AS amount, UM(amount2) AS amount2, cat, type FROM ds
GROUP BY year, month, cat, type ORDER BY year, month, cat, type')
tail(tidy_ds)
tidy_ds = sqldf('SELECT strftime("%m", date) AS month,
strftime("%Y", date) AS year,
SUM(amount) AS amount, SUM(amount2) AS amount2, cat, type FROM ds
GROUP BY year, month, cat, type ORDER BY year, month, cat, type')
tail(tidy_ds)
tidy_ds = sqldf('SELECT strftime("%m", date) AS month,
strftime("%Y", date) AS year,
SUM(amount2) AS amount, cat, type FROM ds
GROUP BY year, month, cat, type ORDER BY year, month, cat, type')
tail(tidy_ds)
tidy_ds_expense = tidy_ds[tidy_ds$type=='debit', ]
tidy_ds_expense
tidy_ds_income = tidy_ds[tidy_ds$type=='credit', ]
tidy_ds_income
tidy_ds = sqldf('SELECT strftime("%m", date) AS month,
strftime("%Y", date) AS year,
SUM(amount2) AS amount, cat, type FROM ds
GROUP BY year, month, cat, type ORDER BY year, month, cat, type')
tidy_ds_expense = tidy_ds[tidy_ds$type=='debit', ]
tidy_ds_income = tidy_ds[tidy_ds$type=='credit', ]
tidy_ds_expense[tidy_ds_expense$year == year(today), ]
tidy_ds_this_month = tidy_ds_expense[tidy_ds_expense$year == year(today) &
tidy_ds_expense$month == month(today), ]
tidy_ds_this_month
month(today)
tidy_ds_this_month = tidy_ds_expense[tidy_ds_expense$year == year(today) &
as.numeric(tidy_ds_expense$month) == month(today), ]
tidy_ds_this_month
this_month_summary = function(today) {
current_month = month(today)
last_month = month(today %m-% months(1))
current_year = year(today)
last_month_year = year(today %m-% months(1))
tidy_ds_this_month = tidy_ds_expense[tidy_ds_expense$year == year(today) &
as.numeric(tidy_ds_expense$month) == month(today), ]
return(tidy_ds_this_month)
}
tidy_ds_this_month = this_month_expense_summary(today)
this_month_expense_summary = function(today) {
current_month = month(today)
last_month = month(today %m-% months(1))
current_year = year(today)
last_month_year = year(today %m-% months(1))
tidy_ds_this_month = tidy_ds_expense[tidy_ds_expense$year == year(today) &
as.numeric(tidy_ds_expense$month) == month(today), ]
return(tidy_ds_this_month)
}
knitr::kable(tidy_ds_this_month_expense_summary, format = "html")
tidy_ds_this_month_expense_summary = this_month_expense_summary(today)
tidy_ds_this_month_expense_summary
knitr::kable(tidy_ds_this_month_expense_summary, format = "html")
?kable
tidy_ds_this_month = tidy_ds_expense[tidy_ds_expense$year == year(today) &
as.numeric(tidy_ds_expense$month) == month(today), c('cat', 'amount')]
tidy_ds_this_month
tidy_ds = sqldf('SELECT strftime("%m", date) AS month,
strftime("%Y", date) AS year,
SUM(amount2) AS amount, cat, type FROM ds
GROUP BY year, month, cat, type ORDER BY year, month, cat, type')
tidy_ds_expense = tidy_ds[tidy_ds$type=='debit', ]
tidy_ds_income = tidy_ds[tidy_ds$type=='credit', ]
this_month_expense_summary = function(today) {
current_month = month(today)
last_month = month(today %m-% months(1))
current_year = year(today)
last_month_year = year(today %m-% months(1))
tidy_ds_this_month = tidy_ds_expense[tidy_ds_expense$year == year(today) &
as.numeric(tidy_ds_expense$month) == month(today), c('cat', 'amount')]
return(tidy_ds_this_month)
}
colnames(tidy_ds_this_month) = c('category', 'amount($)')
tidy_ds = sqldf('SELECT strftime("%m", date) AS month,
strftime("%Y", date) AS year,
SUM(amount2) AS amount, cat, type FROM ds
GROUP BY year, month, cat, type ORDER BY year, month, cat, type')
tidy_ds_expense = tidy_ds[tidy_ds$type=='debit', ]
tidy_ds_income = tidy_ds[tidy_ds$type=='credit', ]
this_month_expense_summary = function(today) {
current_month = month(today)
last_month = month(today %m-% months(1))
current_year = year(today)
last_month_year = year(today %m-% months(1))
tidy_ds_this_month = tidy_ds_expense[tidy_ds_expense$year == year(today) &
as.numeric(tidy_ds_expense$month) == month(today), c('cat', 'amount')]
colnames(tidy_ds_this_month) = c('category', 'amount($)')
return(tidy_ds_this_month)
}
tidy_ds$amount = round(tidy_ds$amount, 2)
tidy_ds = sqldf('SELECT strftime("%m", date) AS month,
strftime("%Y", date) AS year,
SUM(amount2) AS amount, cat, type FROM ds
GROUP BY year, month, cat, type ORDER BY year, month, cat, type')
tidy_ds$amount = round(tidy_ds$amount, 2)
tidy_ds_expense = tidy_ds[tidy_ds$type=='debit', ]
tidy_ds_income = tidy_ds[tidy_ds$type=='credit', ]
this_month_expense_summary = function(today) {
current_month = month(today)
last_month = month(today %m-% months(1))
current_year = year(today)
last_month_year = year(today %m-% months(1))
tidy_ds_this_month = tidy_ds_expense[tidy_ds_expense$year == year(today) &
as.numeric(tidy_ds_expense$month) == month(today), c('cat', 'amount')]
colnames(tidy_ds_this_month) = c('category', 'amount ($)')
return(tidy_ds_this_month)
}
tidy_ds_last_month = tidy_ds_expense[tidy_ds_expense$year == year(today %m-% months(1)) &
as.numeric(tidy_ds_expense$month) ==  month(today %m-% months(1)), c('cat', 'amount')]
tidy_ds_last_month
tidy_ds_this_month = tidy_ds_expense[tidy_ds_expense$year == year(today) &
as.numeric(tidy_ds_expense$month) == month(today), c('cat', 'amount')]
tidy_ds_last_month = tidy_ds_expense[tidy_ds_expense$year == year(today %m-% months(1)) &
as.numeric(tidy_ds_expense$month) ==  month(today %m-% months(1)), c('cat', 'amount')]
tidy_ds_this_month
tidy_ds_last_month
?merge
merge(tidy_ds_this_month, tidy_ds_last_month, by=cat)
names(ds)
merge(tidy_ds_this_month, tidy_ds_last_month, by='cat')
merge(tidy_ds_this_month, tidy_ds_last_month, by='cat', all=TRUE)
colnames(tidy_ds_this_month) = c('category', 'current month ($)', 'last month ($)')
tidy_ds_expenses = merge(tidy_ds_this_month, tidy_ds_last_month, by='cat', all=TRUE)
colnames(tidy_ds_expenses) = c('category', 'current month ($)', 'last month ($)')
tidy_ds_expenses
tidy_ds_expenses = merge(tidy_ds_this_month, tidy_ds_last_month, by='cat', all=TRUE, incomparables = NA)
tidy_ds_expenses
tidy_ds_expenses = merge(tidy_ds_this_month, tidy_ds_last_month, by='cat', all=TRUE, incomparables = 0)
tidy_ds_expenses
tidy_ds_expenses = merge(tidy_ds_this_month, tidy_ds_last_month, by='cat', all=TRUE)
colnames(tidy_ds_expenses) = c('category', 'current month ($)', 'last month ($)')
tidy_ds_expenses==NA
tidy_ds_expenses[,1]
source('~/Dropbox/personal/financial/R/queries.R', echo=TRUE)
tidy_ds_expenses[,2]
ifelse(is.na(tidy_ds_expenses)==TRUE, 0, tidy_ds_expenses)
is.na(tidy_ds_expenses)==TRUE
ifelse(is.na(tidy_ds_expenses)==TRUE, 0, 1)
ifelse(is.na(tidy_ds_expenses)==TRUE, 0, tidy_ds_expenses)
for (i in 2:3){
tidy_ds_expenses[,i] = ifelse(is.na(tidy_ds_expenses[,i])==TRUE, 0, tidy_ds_expenses[,i])
}
tidy_ds_expenses
knitr::opts_chunk$set(echo = TRUE)
source('clean.R')
source('queries.R')
source('src.R')
today = anydate(head(ds$date,1, format='%Y-%m-%d'))
tidy_ds_expense_summary = expense_summary(today)
tidy_ds_expense_summary
tidy_ds = sqldf('SELECT strftime("%m", date) AS month,
strftime("%Y", date) AS year,
SUM(amount2) AS amount, cat, type FROM ds
GROUP BY year, month, cat, type ORDER BY year, month, cat, type')
tidy_ds$amount = round(tidy_ds$amount, 2)
tidy_ds_expense = tidy_ds[tidy_ds$type=='debit', ]
tidy_ds_income = tidy_ds[tidy_ds$type=='credit', ]
current_month = month(today)
last_month = month(today %m-% months(1))
current_year = year(today)
last_month_year = year(today %m-% months(1))
expense_summary = function(today) {
tidy_ds_this_month = tidy_ds_expense[tidy_ds_expense$year == year(today) &
as.numeric(tidy_ds_expense$month) == month(today), c('cat', 'amount')]
tidy_ds_last_month = tidy_ds_expense[tidy_ds_expense$year == year(today %m-% months(1)) &
as.numeric(tidy_ds_expense$month) ==  month(today %m-% months(1)), c('cat', 'amount')]
tidy_ds_expenses = merge(tidy_ds_this_month, tidy_ds_last_month, by='cat', all=TRUE)
colnames(tidy_ds_expenses) = c('category', 'current month ($)', 'last month ($)')
for (i in 2:3){
tidy_ds_expenses[,i] = ifelse(is.na(tidy_ds_expenses[,i])==TRUE, 0, tidy_ds_expenses[,i])
}
return(tidy_ds_expenses)
}
today = anydate(head(ds$date,1, format='%Y-%m-%d'))
today
tidy_ds_expense_summary = expense_summary(today)
tidy_ds_expense_summary
knitr::kable(tidy_ds_expense_summary, format = "html",
row.names=FALSE)
tidy_ds_expenses
?kable
knitr::kable(tidy_ds_expense_summary, format = "html", col.names=c('1','2','3'))
knitr::kable(tidy_ds_expense_summary, format = "html", col.names=c('category', 'current month ($)', 'last month ($)'))
colnames(tidy_ds_expenses) =
knitr::kable(tidy_ds_expense_summary, format = "html", col.names=c('category', 'current month ($)', 'last month ($)'))
colnames(tidy_ds_expenses) =
knitr::kable(tidy_ds_expense_summary, format = "html", col.names=c('category', 'current month', 'last month'))
today = anydate(head(ds$date,1, format='%Y-%m-%d'))
tidy_ds_expense_summary = expense_summary(today)
tidy_ds_expense_summary
colnames(tidy_ds_expenses) =
knitr::kable(tidy_ds_expense_summary, format = "html", col.names=c('category', 'current month', 'last month'))
knitr::kable(tidy_ds_expense_summary, format = "html", col.names=c('category', 'current month', 'last month'))
tidy_ds_income
tidy_ds_this_month = tidy_ds_income[tidy_ds_income$year == year(today) &
as.numeric(tidy_ds_income$month) == month(today), c('cat', 'amount')]
tidy_ds_this_month
tidy_ds_last_month = tidy_ds_income[tidy_ds_income$year == year(today %m-% months(1)) &
as.numeric(tidy_ds_income$month) ==  month(today %m-% months(1)), c('cat', 'amount')]
tidy_ds_last_month
tidy_ds_income = merge(tidy_ds_this_month, tidy_ds_last_month, by='cat', all=TRUE)
tidy_ds_income
for (i in 2:3){
tidy_ds_income[,i] = ifelse(is.na(tidy_ds_income[,i])==TRUE, 0, tidy_ds_income[,i])
}
tidy_ds_income
tidy_ds_this_month = tidy_ds_income[tidy_ds_income$year == year(today) &
as.numeric(tidy_ds_income$month) == month(today), c('cat', 'amount')]
tidy_ds_last_month = tidy_ds_income[tidy_ds_income$year == year(today %m-% months(1)) &
as.numeric(tidy_ds_income$month) ==  month(today %m-% months(1)), c('cat', 'amount')]
tidy_ds_income = merge(tidy_ds_this_month, tidy_ds_last_month, by='cat', all=TRUE)
for (i in 2:3){
tidy_ds_income[,i] = ifelse(is.na(tidy_ds_income[,i])==TRUE, 0, tidy_ds_income[,i])
}
tidy_ds_this_month = tidy_ds_income[tidy_ds_income$year == year(today) &
as.numeric(tidy_ds_income$month) == month(today), c('cat', 'amount')]
tidy_ds_last_month = tidy_ds_income[tidy_ds_income$year == year(today %m-% months(1)) &
as.numeric(tidy_ds_income$month) ==  month(today %m-% months(1)), c('cat', 'amount')]
today = anydate(head(ds$date,1, format='%Y-%m-%d'))
tidy_ds_expense_summary = expense_summary(today)
tidy_ds_this_month = tidy_ds_income[tidy_ds_income$year == year(today) &
as.numeric(tidy_ds_income$month) == month(today), c('cat', 'amount')]
year(today)
tidy_ds_this_month = tidy_ds_income[tidy_ds_income$year == year(today) &
as.numeric(tidy_ds_income$month) == month(today), c('cat', 'amount')]
tidy_ds_this_month
tidy_ds_income
tidy_ds_this_month = tidy_ds_income[tidy_ds_income$year == year(today) &
as.numeric(tidy_ds_income$month) == month(today), c('cat', 'amount')]
tidy_ds_last_month = tidy_ds_income[tidy_ds_income$year == year(today %m-% months(1)) &
as.numeric(tidy_ds_income$month) ==  month(today %m-% months(1)), c('cat', 'amount')]
tidy_ds_income
tidy_ds = sqldf('SELECT strftime("%m", date) AS month,
strftime("%Y", date) AS year,
SUM(amount2) AS amount, cat, type FROM ds
GROUP BY year, month, cat, type ORDER BY year, month, cat, type')
tidy_ds$amount = round(tidy_ds$amount, 2)
tidy_ds_expense = tidy_ds[tidy_ds$type=='debit', ]
tidy_ds_income = tidy_ds[tidy_ds$type=='credit', ]
tidy_ds_this_month = tidy_ds_income[tidy_ds_income$year == year(today) &
as.numeric(tidy_ds_income$month) == month(today), c('cat', 'amount')]
tidy_ds_this_month
tidy_ds_last_month = tidy_ds_income[tidy_ds_income$year == year(today %m-% months(1)) &
as.numeric(tidy_ds_income$month) ==  month(today %m-% months(1)), c('cat', 'amount')]
tidy_ds_incomes = merge(tidy_ds_this_month, tidy_ds_last_month, by='cat', all=TRUE)
for (i in 2:3){
tidy_ds_incomes[,i] = ifelse(is.na(tidy_ds_incomes[,i])==TRUE, 0, tidy_ds_incomes[,i])
}
tidy_ds_incomes
today = anydate(head(ds$date,1, format='%Y-%m-%d'))
tidy_ds_income_summary = income_summary(today)
knitr::opts_chunk$set(echo = TRUE)
source('clean.R')
source('queries.R')
source('src.R')
today = anydate(head(ds$date,1, format='%Y-%m-%d'))
tidy_ds_income_summary = income_summary(today)
knitr::kable(tidy_ds_income_summary, format = "html", col.names=c('category', 'current month', 'last month'))
getwd()
setwd("~/Dropbox/kathryntmorrison.github.io/_source")
setwd("~/Dropbox/kathryntmorrison.github.io")
servr::jekyll(script = "_knitr/build.R", serve = FALSE)
servr::jekyll(script = "_knitr/build.R", serve = FALSE)
t1 = knitr::kable(tidy_ds_expense_summary, format = "html", col.names=c('category', 'current month', 'last month'))
t2 = knitr::kable(tidy_ds_income_summary, format = "html", col.names=c('category', 'current month', 'last month'))
cat(c('<table><tr valign="top"><td>', t1, '</td><td>', t2, '</td><tr></table>'),
sep = '')
servr::jekyll(script = "_knitr/build.R", serve = FALSE)
servr::jekyll(script = "_knitr/build.R", serve = FALSE)
servr::jekyll(script = "_knitr/build.R", serve = FALSE)
